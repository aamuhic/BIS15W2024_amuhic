selectInput("x", "Select Year", choices = unique(cleanUC_admit$academic_yr), selected = 2010),
selectInput("y", "Select Campus", choices = unique(cleanUC_admit$campus), selected = "Davis"),
selectInput("z", "Select Admit Category", choices = unique(cleanUC_admit$category), selected = "Applicants")
), #close first box
box(title = "Ethnicity", width = 9,
plotOutput("plot", width = "800px", height = "600px")
) #close second box
) #close row
) #close dashboard body
) #close ui
server <- function(input, output, session) {
output$plot <- renderPlot({
cleanUC_admit %>%
filter(ethnicity != "All" & perc_fr != "NA") %>%
filter(academic_yr == input$x) %>%
filter(campus == input$y) %>%
filter(category == input$z) %>%
ggplot(aes_string(x="ethnicity", y="perc_fc", fill="ethnicity")) +
geom_col(alpha=0.5, color="black") +
labs(x=NULL,
y="% of Admissions") +
theme(axis.text.x = element_text(angle=60, hjust=1),
plot.title = element_text(size = 12, face = "bold"),
axis.title.x = element_text(size=10),
axis.title.y = element_text(size=10))
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = unique(cleanUC_admit$academic_yr), selected = 2010),
selectInput("y", "Select Campus", choices = unique(cleanUC_admit$campus), selected = "Davis"),
selectInput("z", "Select Admit Category", choices = unique(cleanUC_admit$category), selected = "Applicants")
), #close first box
box(title = "Ethnicity", width = 9,
plotOutput("plot", width = "800px", height = "600px")
) #close second box
) #close row
) #close dashboard body
) #close ui
server <- function(input, output, session) {
output$plot <- renderPlot({
cleanUC_admit %>%
filter(ethnicity != "All" & perc_fr != "NA") %>%
filter(academic_yr == input$x) %>%
filter(campus == input$y) %>%
filter(category == input$z) %>%
ggplot(aes_string(x="ethnicity", y="perc_fc", fill="ethnicity")) +
geom_col()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = unique(cleanUC_admit$academic_yr), selected = 2010),
selectInput("y", "Select Campus", choices = unique(cleanUC_admit$campus), selected = "Davis"),
selectInput("z", "Select Admit Category", choices = unique(cleanUC_admit$category), selected = "Applicants")
), #close first box
box(title = "Ethnicity", width = 9,
plotOutput("plot", width = "800px", height = "600px")
) #close second box
) #close row
) #close dashboard body
) #close ui
server <- function(input, output) {
output$plot <- renderPlot({
cleanUC_admit %>%
filter(ethnicity != "All" & perc_fr != "NA") %>%
filter(academic_yr == input$x) %>%
filter(campus == input$y) %>%
filter(category == input$z) %>%
ggplot(aes_string(x="ethnicity", y="perc_fc", fill="ethnicity")) +
geom_col()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = unique(cleanUC_admit$academic_yr), selected = 2010),
selectInput("y", "Select Campus", choices = unique(cleanUC_admit$campus), selected = "Davis"),
selectInput("z", "Select Admit Category", choices = unique(cleanUC_admit$category), selected = "Applicants")
), #close first box
box(title = "Ethnicity", width = 9,
plotOutput("plot", width = "800px", height = "600px")
) #close second box
) #close row
) #close dashboard body
) #close ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
cleanUC_admit %>% filter(ethnicity != "All" & perc_fr != "NA") %>%
filter(academic_yr == input$x) %>%
filter(campus == input$y) %>%
filter(category == input$z) %>%
ggplot(aes(x="ethnicity", y="perc_fr", fill="ethnicity")) +
geom_col(alpha=0.5, color="black")
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = unique(cleanUC_admit$academic_yr), selected = 2010),
selectInput("y", "Select Campus", choices = unique(cleanUC_admit$campus), selected = "Davis"),
selectInput("z", "Select Admit Category", choices = unique(cleanUC_admit$category), selected = "Applicants")
), #close first box
box(title = "Ethnicity", width = 9,
plotOutput("plot", width = "800px", height = "600px")
) #close second box
) #close row
) #close dashboard body
) #close ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
cleanUC_admit %>% filter(ethnicity != "All" & perc_fr != "NA") %>%
filter(academic_yr == input$x) %>%
filter(campus == input$y) %>%
filter(category == input$z) %>%
ggplot(aes_string(x="ethnicity", y="perc_fr", fill="ethnicity")) +
geom_col(alpha=0.5, color="black")
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year", choices = unique(cleanUC_admit$academic_yr), selected = 2010),
selectInput("y", "Select Campus", choices = unique(cleanUC_admit$campus), selected = "Davis"),
selectInput("z", "Select Admit Category", choices = unique(cleanUC_admit$category), selected = "Applicants")
), #close first box
box(title = "Ethnicity", width = 9,
plotOutput("plot", width = "800px", height = "600px")
) #close second box
) #close row
) #close dashboard body
) #close ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
cleanUC_admit %>% filter(ethnicity != "All" & perc_fr != "NA") %>%
filter(academic_yr == input$x) %>%
filter(campus == input$y) %>%
filter(category == input$z) %>%
ggplot(aes_string(x="ethnicity", y="perc_fr", fill="ethnicity")) +
geom_col(alpha=0.5, color="black") +
labs(x=NULL,
y="% of Admissions",
fill="Ethnicity") +
theme(axis.text.x = element_text(angle=60, hjust=1),
axis.title.x = element_text(size=10),
axis.title.y = element_text(size=10))
})
}
shinyApp(ui, server)
runApp('uc_ethnicity.R')
View(UC_admit)
cleanUC_admit %>%
filter(category == "Enrollees")
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(category == "Enrollees")
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(category == "Enrollees") %>%
ggplot(aes(x=academic_yr, y=perc_fr))
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(category == "Enrollees") %>%
ggplot(aes(x=academic_yr, y=perc_fr)) +
geom_dotplot()
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(category == "Enrollees") %>%
ggplot(aes(x=academic_yr, y=perc_fr)) +
geom_point()
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(campus == "Davis")
filter(category == "Enrollees") %>%
filter(ethnicity == "International") %>%
ggplot(aes(x=academic_yr, y=perc_fr))
View(cleanUC_admit)
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr))
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(campus == "Davis") %>%
filter(category == "Enrollees") %>%
filter(ethnicity == "White")
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(campus == "Davis") %>%
filter(category == "Enrollees") %>%
filter(ethnicity == "White") %>%
ggplot(aes(x=academic_yr, y=perc_fr))
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(campus == "Davis") %>%
filter(category == "Enrollees") %>%
filter(ethnicity == "White") %>%
ggplot(aes(x=academic_yr, y=perc_fr)) +
geom_point()
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(campus == "Davis") %>%
filter(category == "Enrollees") %>%
filter(ethnicity == "White") %>%
ggplot(aes(x=academic_yr, y=perc_fr)) +
geom_point() +
geom_line()
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(campus == "Davis") %>%
filter(category == "Enrollees") %>%
filter(ethnicity == "White") %>%
ggplot(aes(x=academic_yr, y=perc_fr)) +
geom_point() +
geom_path()
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(campus == "Davis") %>%
filter(category == "Enrollees") %>%
filter(ethnicity == "White") %>%
ggplot(aes(x=academic_yr, y=perc_fr)) +
geom_point() +
geom_path(group="keep")
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(campus == "Davis") %>%
filter(category == "Enrollees") %>%
filter(ethnicity == "White") %>%
ggplot(aes(x=academic_yr, y=perc_fr)) +
geom_point()
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(campus == "Davis") %>%
filter(category == "Enrollees") %>%
filter(ethnicity == "White") %>%
ggplot(aes(x=academic_yr, y=perc_fr)) +
geom_point() +
geom_path(groups="keep")
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(campus == "Davis") %>%
filter(category == "Enrollees") %>%
filter(ethnicity == "White") %>%
ggplot(aes(x=academic_yr, y=perc_fr)) +
geom_point() +
geom_path(group="keep")
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(campus == "Davis") %>%
filter(category == "Enrollees") %>%
filter(ethnicity == "White") %>%
ggplot(aes(x=academic_yr, y=perc_fr)) +
geom_point(color="red") +
geom_path(group="keep")
cleanUC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(campus == "Davis") %>%
filter(category == "Enrollees") %>%
filter(ethnicity == "White") %>%
ggplot(aes(x=academic_yr, y=perc_fr)) +
geom_point(color="red") +
geom_path(group="keep") +
labs(title="Admissions by Year for UC Campuses",
x="Academic Year",
y="% of Admissions") +
theme(plot.title = element_text(size = 12, face = "bold"),
axis.title.x = element_text(size=10),
axis.title.y = element_text(size=10))
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus", choices = unique(cleanUC_admit$campus), selected = Davis),
selectInput("y", "Select Category", choices = unique(cleanUC_admit$category), selected = "Applicants"),
selectInput("z", "Select Admit Ethnicity", choices = unique(cleanUC_admit$ethnicity), selected = "All")
), #close first box
box(title = "Yearly Trends", width = 9,
plotOutput("plot", width = "800px", height = "600px")
) #close second box
) #close row
) #close dashboard body
) #close ui
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus", choices = unique(cleanUC_admit$campus), selected = "Davis"),
selectInput("y", "Select Category", choices = unique(cleanUC_admit$category), selected = "Applicants"),
selectInput("z", "Select Admit Ethnicity", choices = unique(cleanUC_admit$ethnicity), selected = "All")
), #close first box
box(title = "Yearly Trends", width = 9,
plotOutput("plot", width = "800px", height = "600px")
) #close second box
) #close row
) #close dashboard body
) #close ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
cleanUC_admit %>% mutate(academic_yr=as.factor(academic_yr)) %>% filter(perc_fr != "NA") %>%
filter(campus == input$x) %>%
filter(category == input$y) %>%
filter(ethnicity == input$z) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr")) +
geom_point(color="red") +
geom_path(group="keep") +
labs(x="Academic Year",
y="% of Admissions") +
theme(axis.title.x = element_text(size=10),
axis.title.y = element_text(size=10))
})
}
shinyApp(ui, server)
shinyApp(ui, server)
runApp('uc_year_app.R')
runApp('uc_year_app.R')
runApp('uc_year_app.R')
runApp('uc_ethnicity_app.R')
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus", choices = unique(cleanUC_admit$campus), selected = "Davis"),
selectInput("y", "Select Category", choices = unique(cleanUC_admit$category), selected = "Applicants"),
selectInput("z", "Select Admit Ethnicity", choices = unique(cleanUC_admit$ethnicity), selected = "All")
), #close first box
box(title = "Yearly Trends", width = 9,
plotOutput("plot", width = "800px", height = "600px")
) #close second box
) #close row
) #close dashboard body
) #close ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
cleanUC_admit %>% mutate(academic_yr=as.factor(academic_yr)) %>% filter(ethnicity != "All" & perc_fr != "NA") %>%
filter(campus == input$x) %>%
filter(category == input$y) %>%
filter(ethnicity == input$z) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr")) +
geom_point(color="red") +
geom_path(group="keep") +
labs(x="Academic Year",
y="% of Admissions") +
theme(axis.title.x = element_text(size=10),
axis.title.y = element_text(size=10))
})
}
shinyApp(ui, server)
cleanUC_admit %>%
filter(ethnicity != "All" & perc_fr != "NA") %>%
filter(academic_yr == 2019) %>% # will be interactive
filter(campus == "Davis") %>%   # will be interactive
filter(category == "Applicants") %>% # will be interactive
ggplot(aes(x=ethnicity, y=perc_fr, fill=ethnicity)) +
geom_col(alpha=0.5, color="black") +
labs(title="Admissions by Ethnicity for UC Campuses",
x=NULL,
y="% Applicants") +
theme(axis.text.x = element_text(angle=60, hjust=1),
plot.title = element_text(size = 12, face = "bold"),
axis.title.x = element_text(size=10),
axis.title.y = element_text(size=10))
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year",
choices = unique(cleanUC_admit$academic_yr),
selected = 2010),
selectInput("y", "Select Campus",
choices = unique(cleanUC_admit$campus),
selected = "Davis"),
selectInput("z", "Select Admit Category",
choices = unique(cleanUC_admit$category),
selected = "Applicants")
), #close first box
box(title = "Ethnicity", width = 9,
plotOutput("plot", width = "800px", height = "600px")
) #close second box
) #close row
) #close dashboard body
) #close ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
cleanUC_admit %>% filter(ethnicity != "All" & perc_fr != "NA") %>%
filter(academic_yr == input$x) %>%
filter(campus == input$y) %>%
filter(category == input$z) %>%
ggplot(aes_string(x="ethnicity", y="perc_fr", fill="ethnicity")) +
geom_col(alpha=0.5, color="black") +
labs(x=NULL,
y="% {input$z}",
fill="Ethnicity") +
theme(axis.text.x = element_text(angle=60, hjust=1),
axis.title.x = element_text(size=10),
axis.title.y = element_text(size=10))
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year",
choices = unique(cleanUC_admit$academic_yr),
selected = 2010),
selectInput("y", "Select Campus",
choices = unique(cleanUC_admit$campus),
selected = "Davis"),
selectInput("z", "Select Admit Category",
choices = unique(cleanUC_admit$category),
selected = "Applicants")
), #close first box
box(title = "Ethnicity", width = 9,
plotOutput("plot", width = "800px", height = "600px")
) #close second box
) #close row
) #close dashboard body
) #close ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
cleanUC_admit %>% filter(ethnicity != "All" & perc_fr != "NA") %>%
filter(academic_yr == input$x) %>%
filter(campus == input$y) %>%
filter(category == input$z) %>%
ggplot(aes_string(x="ethnicity", y="perc_fr", fill="ethnicity")) +
geom_col(alpha=0.5, color="black") +
labs(x=NULL,
y="% input$z",
fill="Ethnicity") +
theme(axis.text.x = element_text(angle=60, hjust=1),
axis.title.x = element_text(size=10),
axis.title.y = element_text(size=10))
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Year",
choices = unique(cleanUC_admit$academic_yr),
selected = 2010),
selectInput("y", "Select Campus",
choices = unique(cleanUC_admit$campus),
selected = "Davis"),
selectInput("z", "Select Admit Category",
choices = unique(cleanUC_admit$category),
selected = "Applicants")
), #close first box
box(title = "Ethnicity", width = 9,
plotOutput("plot", width = "800px", height = "600px")
) #close second box
) #close row
) #close dashboard body
) #close ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
cleanUC_admit %>% filter(ethnicity != "All" & perc_fr != "NA") %>%
filter(academic_yr == input$x) %>%
filter(campus == input$y) %>%
filter(category == input$z) %>%
ggplot(aes_string(x="ethnicity", y="perc_fr", fill="ethnicity")) +
geom_col(alpha=0.5, color="black") +
labs(x=NULL,
y="% Applicants, Admits, or Enrollees",
fill="Ethnicity") +
theme(axis.text.x = element_text(angle=60, hjust=1),
axis.title.x = element_text(size=10),
axis.title.y = element_text(size=10))
})
}
shinyApp(ui, server)
